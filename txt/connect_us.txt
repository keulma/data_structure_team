start 2025 05 08

1. gui
2. asia middle map 
map print function Europe middle-> asia map & allocate update no botherline

gui 1page : connect_us ,id, 국가, 도시 입력만 받는 깔끔한 시작페이지(로그인 개념)
gui 2page : 좌측 세계지도, 지도 내 친밀도 선, 친구 위치 onoff기능
            친구목록 알파벳, 친밀도, 등록 순 정렬, 친구 추가, 삭제, 카톡 대화(텍스트 파일) 업로드 버튼


친구 추가 함수(이름, 도시, 친밀도 = 0)
친구 제거 함수

친구 목록 출력(친구)
친구 목록 정렬(친구)
    알파벳, 등록 순, 친밀도도


업로드(파일탐색기에서 카톡 대화 txt파일, 친밀도 수정)

지도 출력
지도 내 친구 출력(이름, 도시)
지도 내 선 출력(친밀도)

친구 목록 출력 방법 : (순서). 국가, 이름, 친밀도(하트 이모티콘 내부에 숫자)
 
 
//
~~10주차

gui, 내부 기능, 텍스트 파일 파싱 방식 토의 및 구현

초기 gui 틀 구현 - (로그인, asia middle map , 조작 버튼)
대화(카카오톡 대화창) 텍스트 파일 파싱 기능 구현 -> 출력 및 관리만 --> 배열과 연결 필요

 

다음 주에 이어서 진행할 내용 토의
- 기능 추가(친구 출력, 정렬 등), 기능 다듬기, 기능 - gui 상호 연결
//
pip install folium geopy PyQt5 PyQtWebEngine



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2025-05-12 아침 -   P.S. 김동준

일단 gui 좀 해놨음


구현 완료 : 카카오톡 데이터 연결 및 선긋기 기능을 제외한 중요 기능 및 함수들 대부분 구현 완료
1. 초기 로그인창 사용자 정보 입력 및 저장 -> 이를 바탕으로 로그인 시스템 완성 (저장은 다 하는데, 이름을 기반으로만 비교후 데이터 저장 혹은 로드 -> 굳이 개선 필요하나?(->예외처리만))
2. 사용자 위치 마우스 클릭으로 입력
3. 위도, 경도 데이터를 저장하고, 이 데이터를 나라 정보가 담긴 데이터셋과 연동 -> 지도를 마우스로 클릭하면 위치 데이터(위도, 경도)에 따라 나라 정보(데이터) 자동으로 저장 및 반영
4. 위치 입력, 이름 설정(변경) 클릭 버튼 구현
5. 이런 친구 데이터 저장
6. 창을 종료(프로그램 종료)하면 자동으로 데이터 저장되도록 설계 -> X눌러도 정보 삭제 X 
7. gui 비율 변경 및 중심 변경해서 가운데를 기준으로 main_page로 화면 커지도록 설계 (start_page-로그인창은 main_page보다 작아야 깔끔했음)  -> 수정 가능-의견 제시 부탁 

/

그 외 구현한 세부사항
1. CONNECT-US 표지 이미지 제작(assets에 넣어놨음)하고 초기화면에 띄우기 -> 나중에 이미지 개선해서 변경
2. gui비율 수정 (나중에 디자인 수정 필요하면 추가 수정하기)

################################

구현해야 하는 기능 : 
1. 카카오톡 데이터 파싱한거 연결 기능 및 함수 구현      
-> 지금 위치 등의 데이터가 클릭 및 입력과 동시에 저장되는 지, 아니면 프로그램 종료 후 저장되는 지 모두 확인 (전자로 구현하기는 했는데, 중간에 코드 꼬였을 상황 대비)
2. 카카오톡 데이터 따로 저장할 방식(자료구조) 정하기
3. 개발자의 시선 - 어느 단위를 기준으로 친밀도 선을 구현할 지 (색, 투명도, 굵기 등)
4. -> 이를 바탕으로 선긋기 구현 (3번을 미리 해야 편함)              이건 되돌리기 귀찮은 중요한 부분이라, 다시 다같이 토의해서 방향을 정하고 구현합시다.

+
5. 주석 좀 더 자세하게 달기 -> 지금 너무 헷갈림
7. 나중에 GUI 더 예쁘게 다듬기

################################

고려해야 하는 사항 :
1. 배열이라는 부분에 좀 집중해서, 발표할 때 배열을 어느정도는 깊게 언급할 수 있어야함 -> 배열 적용 및 개선 가능한 부분을 찾고 적용하기 (-> 카카오톡 대화 데이터에 어떻게 적용할 지)
2. 중간에 버그 너무 많이남 -> 고치긴했는데 다른 개발 환경에서 적용될 지 모르겠음 (최대한 적용되도록 기능들을 구현하고 고치기는 함) -> 문제 발생하면 말해주세요 
(간단해보이는 문제도 시간 오래걸리는 경우가 있음 -> 같이 고민해야 편하고 빠름)

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////